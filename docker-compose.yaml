version: "3"

services:
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - ./client/:/app
      - /app/node_modules
    networks:
      - backend
    stdin_open: true
    tty: true

  server:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - ./server/:/app
      - /app/node_modules
    environment:
      - NODE_PATH=src
      - PORT=3050
      - DB_HOST=mongo
      - DB=jobinfo
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - backend
    depends_on:
      - mongo
      - redis
      - rabbitmq
    ports:
      - "5000:3050"
      - "8080:8080"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_VHOST: "/players"
      RABBITMQ_DEFAULT_USER: "dev"
      RABBITMQ_DEFAULT_PASS: "dev"
    volumes:
      - data:/var/lib/rabbitmq/mnesia
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  redis:
    container_name: redis
    image: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - backend
    volumes:
      - data:/data/redis
    ports:
      - "6379:6379"
    restart: always

  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - data:/data/db
    ports:
      - "27017:27017"
    networks:
      - backend
    restart: always

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - "3050:80"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
